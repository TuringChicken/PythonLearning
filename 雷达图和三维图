# 雷达图之polar函数
# polar(theta, r, **kwargs)
import numpy as np
import matplotlib.pyplot as plt
import matplotlib as mpl
import mpl_toolkits.mplot3d
plt.polar(0.25*np.pi, 20, 'ro', lw=2)
plt.ylim(0, 50)     # 设置极轴的上下限
plt.show()
# 绘制多个极角和极轴时
theta = np.array([0.25, 0.5, 0.75, 1, 1.25, 1.5, 1.75, 2, 0.25])
r = [75, 60, 50, 70, 50, 85, 45, 70, 75]
plt.polar(theta*np.pi, r, 'ro-', lw=2)
plt.fill(theta*np.pi, r, facecolor='r', alpha=0.25)     # 填充
plt.ylim(0, 100)
plt.show()

# 雷达图实战，学生成绩清单雷达图
courses = ['C++', 'Python', '高等数学', '大学英语', '软件工程', '计算机组成原理', '操作系统', '网络工程']
scores = [82, 95, 72, 85, 45, 58, 65, 86]
datalength = len(scores)
angles = np.linspace(0, 2*np.pi, datalength, endpoint=False)
scores.append(scores[0])
angles = np.append(angles, angles[0])
plt.polar(angles, scores, 'rv--', lw=2)
plt.thetagrids(angles*180/np.pi, courses, fontproperties='simhei')
plt.fill(angles, scores, facecolor='r', alpha=0.4)
plt.show()


# 三维图
# 如果要绘制三维图形，首先要使用下面的语句导入相应的对象：
# from mpl toolkits.mplot3d.import Axes3D
# 然后使用下面的两种方式之一声明要创建的三维子图：
# ax = fig.gca(projection='3d')
# ax = plt.subplot(111, projection='3d')
# 接下来就可以使用ax的plot方法绘制三维曲线、plot_surface()方法绘制三维曲面、scatter()方法绘制三维散点图或bar3d()方法绘制三维柱状图

# 三维曲面的绘制方法
# plot_surface(X, Y, Z, *args, **kwargs)

# 三维散点图绘制方法：p3d.Axes3D.scatter()
# p3d.Axes3D.scatter(xs, ys, zs=0, zdir='z', s=20, c=None, depthshade=True, *args, **kwargs)

# 三维柱状图绘制方法：p3d.Axes3D.bar3d()
# p3d.Axes3D.bar3d(x, y, z, dx, dy, dz, color=None, zsort='average', *args, **kwargs)

# 三位曲线图实战
fig = plt.figure()
ax = fig.gca(projection='3d')
theta = np.linspace(-4*np.pi, 4*np.pi, 100)
z = np.linspace(-4, 4, 100)*0.3
r = z**4+1
x = r*np.sin(theta)
y = r*np.cos(theta)
ax.plot(x, y, z, 'b^-', label='3D Picture Test')
mpl.rcParams['legend.fontsize'] = 10
ax.legend()
plt.show()

# 三维柱状图实战
x = np.random.randint(0, 40, 10)
y = np.random.randint(0, 40, 10)
z = 80*abs(np.sin(x+y))
ax = plt.subplot(projection='3d')
for xx, yy, zz in zip(x, y, z):
    color = np.random.random(3)
    ax.bar3d(xx, yy, 0, dx=1, dy=1, dz=zz, color=color)

ax.set_xlabel('X')
ax.set_ylabel('Y')
ax.set_zlabel('Z')

plt.show()
