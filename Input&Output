# 输入函数input()
str1 = input("请输入：")
print("你输入的内容是：", str1)
sum1 = input("请输入算术表达式：")
sum1 = eval(sum1)
print("结果为：", sum1)


# 格式化输出
# 浮点数的输出
# (1)格式化输出
print('%f' % 1.11)          # 默认保留6位小数
print('%.1f' % 1.11)        # 取1位小数
print('%e' % 1.11)          # 默认6位小数，用科学计数法
print('%.3e' % 1.11)        # 取3位小数，用科学计数法
print('%g' % 1111.1111)     # 默认6位有效数字
print('%.7g' % 1111.1111)   # 取7位有效数字
print('%.2g' % 1111.1111)   # 取2位有效数字，自动转换为科学计数法
# (2)内置round()函数
# round(number[, ndigits])
# 参数：
# number-这是一个数字表达式
# ndigits-表示从小数点到最后四舍五入的位数。默认值为0.
# 返回值：该方法返回x的小数点舍入为n位数后的值。
print(round(1.1125))       # 四舍五入，不指定位数，取整
print(round(1.1135, 3))    # 取3位小数，由于3为奇数，则向下“舍”
print(round(1.1125, 3))    # 取3位小数，由于2为偶数，则向上“入”
print(round(2.675, 2))     # 取2位有效小数
# 字符串输出
# %s
# %10s——右对齐，占位符10位
# %.2s——截取2位字符串
print('%s' % 'hello world')         # 字符串输出
print('%20s' % 'hello world')       # 右对齐，取20位，不够则补位
print('%-20s' % 'hello world')      # 左对齐，取20位，不够则补位
print('%.2s' % 'hello world')       # 取2位
print('%10.2s' % 'hello world')     # 右对齐，取2位
print('%-10.2s' % 'hello world')    # 左对齐，取2位
